@page "/donor/MoreInfo/{id:int}"
@inject IFeederService FeederService
@inject NavigationManager NavigationManager
@inject IShoppingListService ShoppingListService

<body>
    @if(feeder == null)
    {
        <h1>Loading</h1>
        <p>Your content is loading...</p>
    }
    else
    {
        <div class="card">
            <h5 class="card-header">@feeder.organization, @feeder.branch</h5>

            <div class ="card-body">
                <p>@feeder.description</p>
                @if(sList == null)
                {
                    <h3>We have everything we need at the moment!</h3>
                }
                else{
                    <h3>This is what we need:</h3>
                    <div class ="card-body">
                        <table>
                            <tbody>
                                @foreach(var item in sList)
                                {
                                    <tr class="form-group">
                                        <td><input type="checkbox" disabled="@IsDisabled" asp-for="@item.selected" @bind-value="@item.selected" @bind-value:event="oninput" ></td>
                                        <td>@item.ItemName</td>
                                        <td>@item.ItemQuantity @item.ItemQuantityType</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
               
            </div>
            <div class="card-footer">
                <button class="btn" @onclick="onBack">Back</button>
                <button class="btn" @onclick="OpenDialog">Donate</button>
            </div>
        </div>
    
        @* <div class="card">
            <h5 class="card-header">@feeder.organization, @feeder.branch</h5>
            <div class ="card-body">
            <h3>What do we do?/Why do we need your donations?</h3>
            <p>@feeder.description</p>
            <h3>This is what we need:</h3>
            <p>Select the items you can donate</p>
            <div class="view_wrap list-view">
                @foreach(var item in sList)
                {
                    <div class="form-group item">

                        <p>@item.ItemName</p>  
                        <p>@item.ItemQuantity @item.ItemQuantityType</p>
                    </div>  
                }
            </div>
        </div>
    <div class="card-header">
        <button class="btn" @onclick="onBack">Back</button>
    </div>
        </div> *@

    }



    @* <h1>Int Page</h1>
    <p>You passed in the int value: @Id</p> *@
</body>

@if (DialogIsOpen)
{
    if(info)
    {
        <Dialog Caption="DONATIONS"
            Message="@message"
            OnClose="@OnDialogClose"
            Type="Dialog.Category.Info">
        </Dialog>
    }
    else
    {
        <Dialog Caption="DONATIONS"
            Message="@message"
            OnClose="@OnDialogClose"
            Type="Dialog.Category.Okay">
        </Dialog>
    }
    
}
      

@code{
    [Parameter]
    public int Id {get; set;}

    private bool IsDisabled = false;

    public bool info = false;

    UserInfo cUser = CurrentUserService._currentUser;

    Feeder feeder = null;
    List<DonationRequest> sList = null;

    protected override async Task OnInitializedAsync()
    {
        feeder = await FeederService.GetById(Id);
        sList = await ShoppingListService.GetItemsByFeeder(Id);
    }

    public void onBack()
    {
        NavigationManager.NavigateTo($"donor/home");
    }

    //Dialog box
    private bool DialogIsOpen = false;
    private string message;
     private void OpenDialog()
    {
        DialogIsOpen = true;
        message = "You are agreeing to donate: \n";
        int count = 0;
        foreach(var i in sList)
        {
            if(i.selected == true)
            {
                message = message + i.ItemQuantity + " " + i.ItemQuantityType + " of " + i.ItemName + "\n";
                count++;
            }
        }
        message = message + "\nIs this correct?";
        info = false;

        if(count == 0)
        {
            message = "You have not selected any items";
            info = true;
        }
            
       
    }

     private void OnDialogClose(bool isOk){
        
        DialogIsOpen = false;

        if(isOk)
        {
            List<DonationRequest> donations = new List<DonationRequest>();
            foreach(var d in sList)
            {
                if(d.selected)
                {
                    //Sets the donor id to the current donor user id
                    d.DonorId = cUser.Id;
                    donations.Add(d);
                }
            }
            ShoppingListService.UpdateDonorIds(donations);
            IsDisabled = true;
        }
    }


}

@* <body>
<div class="card">
    <h5 class="card-header">@feeder.organization, @feeder.branch</h5>

    <div class ="card-body">
        <h3>What do we do?/Why do we need your donations?</h3>
        <p>@feeder.description</p>
        <h3>This is what we need:</h3>
        <p>Select the items you can donate</p>
        @* <div class="view_wrap list-view"> *@
            @* @foreach(Item item in sList.Items)
            {
                <div class="form-group item">

                    <p>@item.ItemName</p>  
                    <p>@item.ItemQuantity @item.ItemQuantityType</p>
                </div> 
            }
        @* </div> *@ @* 
    </div>
    <div class="card-header">
        <button class="btn" @onclick="onBack">Back</button>
    </div>
</div>
</body> *@

@* @code{

    [CascadingParameter(Name="feeder")] Feeder feeder { get; set; }
    @* [Parameter] 
     public string organization { get; set; }

     public Feeder feeder; *@

    @* public List<Feeder> feeders = new List<Feeder>(){
            new Feeder("Beyond Homeless", "A homeless shelter for women", "Greencastle", 46135), 
            new Feeder("Ladles of Love", "A foodbank", "Greencastle", 46135),
            new Feeder("Location3", "A soup kitchen", "Greencastle", 46135)}; *@
     @* protected override void OnInitialized()
    {
        // find the feeder object using the organization name parameter
        feeder = feeders.Find(f => f.Organization == organization);
    } *@
    
    @* Feeder feeder = new Feeder("Beyond Homeless", "A homeless shelter for women", "Greencastle", 46135); *@
    @*

    ShoppingList sList = new ShoppingList(
        new List<Item>(){
            new Item("Beans", "lbs", 2),
            new Item("Bread", "units", 1),
            new Item("Beans", "lbs", 2) 
            }
    );

    void onBack()
    {
        feeder = null;
    }

} *@