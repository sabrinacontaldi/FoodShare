@page "/donor/MoreInfo/{id}"
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IProfileService ProfileService
@inject IShoppingListService ShoppingListService

<body>
    @if(feeder == null)
    {
        <h1>Loading</h1>
        <p>Your content is loading...</p>
    }
    else
    {
        <div class="card">
            <h5 class="card-header">@feeder.Name</h5>
        
            @if(sList == null)
            {
                <div class ="card-body">
                    <h3>We have everything we need at the moment!</h3>
                </div>
                <div class="card-footer">
                    <button class="btn" @onclick="onBack">Back</button>
                </div>

            }
            else{
                <div class ="card-body">
                    <h3>This is what we need:</h3>
                    <div class ="card-body">
                        <table>
                            <tbody>
                                @foreach(var item in sList)
                                {
                                    @* @if(item.DonorId == null)
                                    { *@
                                        <tr class="form-group">
                                            <td><input type="checkbox" disabled="@IsDisabled" asp-for="@item.selected" @bind-value="@item.selected" @bind-value:event="oninput" ></td>
                                            <td>@item.ItemName</td>
                                            <td>@item.Quantity @item.QuantityType</td>
                                        </tr>
                                    @* } *@
                                }
                            </tbody>
                        </table>
                    </div>
               
                </div>
                <div class="card-footer">
                    <button class="btn" @onclick="onBack">Back</button>
                    <button class="btn" @onclick="OpenDialog">Donate</button>
                </div>
            }
        </div>
        }
</body>

@* Uncomment *@
@if (DialogIsOpen)
{
    if(info)
    {
        <Dialog Caption="DONATIONS"
            Message="@message"
            OnClose="@OnDialogClose"
            Type="Dialog.Category.Info">
        </Dialog>
    }
    else
    {
        <Dialog Caption="DONATIONS"
            Message="@message"
            OnClose="@OnDialogClose"
            Type="Dialog.Category.Okay">
        </Dialog>
    }
    
}
      

@code{
    //Feeder Id
    [Parameter] public string id { get; set; }

    private string UserId { get; set; }
    @* private string Id { get; set; } *@

    private bool IsDisabled = false;

    public bool info = false;

   

    Profile feeder = null;
    List<DonationRequest> sList = null;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            var user = authState?.User;
        
            if (user?.Identity is not null && user.Identity.IsAuthenticated)
            {
            var nameIdentifierClaim = user.Claims.FirstOrDefault(c => c.Type == ClaimTypes.NameIdentifier);
            if (nameIdentifierClaim != null)
                {
                    UserId = nameIdentifierClaim.Value;
                    Console.WriteLine(UserId);
                }
            }
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
        }

        feeder = await ProfileService.GetProfileById(id);
        
        sList = await ShoppingListService.GetUndonatedItemsByFeeder(id);

    }

    public void onBack()
    {
        NavigationManager.NavigateTo($"/", false);
    }

    //Dialog box
    private bool DialogIsOpen = false;
    private string message;
     private void OpenDialog()
    {
        DialogIsOpen = true;
        message = "You are agreeing to donate: \n";
        int count = 0;
        foreach(var i in sList)
        {
            if(i.selected == true)
            {
                message = message + i.Quantity + " " + i.QuantityType + " of " + i.ItemName + "\n";
                count++;
            }
        }
        message = message + "\nIs this correct?";
        info = false;

        if(count == 0)
        {
            message = "You have not selected any items";
            info = true;
        }
            
       
    }

    private void OnDialogClose(bool isOk){
        
        DialogIsOpen = false;

        if(isOk)
        {
            List<DonationRequest> donations = new List<DonationRequest>();
            foreach(var d in sList)
            {
                if(d.selected)
                {
                    //Sets the donor id to the current donor user id
                    d.DonorId = UserId;
                    donations.Add(d);
                }
            }

            ShoppingListService.UpdateDonorIds(donations);
            IsDisabled = true;
        } 
    }
}